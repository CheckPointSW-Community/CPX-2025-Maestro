#**** This is an example variables file, for both the ElasticXL and Maestro builds. Often admin/vpn123 will be used, and of course, these values must be changed for production use. 
#Please reach out to Tom Kendrick on Check Mates for information and assistance. 
#The approach will be updated to use Ansible, when the code is available.
#API Vers
export Mgmt_API_Ver=2.0
export GAIA_API_Ver=1.8

#Maestro System Details
#The site ID for the new gateway to be added to
export Maestro_Group_SiteID="1"
#What will the Sec Group be called, in case no name is provided
export Maestro_Group_hostname=CPX25_Sec_Group
#VirtGW setting is used to enable VSX/VSNext
export Maestro_Group_VirtGW=True
#Set the One time password, for various operations, like SIC
export Maestro_Group_OTP=vpn123
#Usernames for the sec group, or the MHO's defined here. The vpn123 password is well known so there is no secret in disclusing it.
export Maestro_Group_user=admin
export Maestro_Group_pass=vpn123
export Maestro_Group_MHO_user=admin
export Maestro_Group_MHO_pass=vpn123
#Define the IP address here, that will be used in scipts, when accessing the Sec Group. This should match what was defined when launched from CLI in script 1
export Maestro_Group_SMO_IP=172.31.100.182
export Maestro_Group_SMO_Mask_Length=22
export Maestro_Group_SMO_DG=172.31.100.1
#Networking info for the data bond.  This should match what was defined when launched from CLI in script 1
export Maestro_Group_bondID=10
export Maestro_Group_bond_mode=8023AD
export Maestro_Group_bond_xmithash=layer3+4
export Maestro_Group_slave_1=eth1-49
export Maestro_Group_slave_2=eth2-49
#Here we used the temporary password vpn123. You can confirm the values of hashes, by first setting the the values, and then checking the config for the hashed version.
# Non escaped value export export Maestro_Group_ExpertHash="$6$rounds=10000$GaLt53lB$ZJlsasg07KHU0RCdYuemEj4LCyxcT9aPb.<hash>"
#Remember special characters need to be escaped with a \ before they will be accepted
export Maestro_Group_ExpertHash="\$6\$rounds=10000\$GaLt53lB\$ZJlsasg07KHU0RCdYuemEj4LCyxcT9aPb.<hash>"
export Maestro_Group_GrubHash="grub.pbkdf2.sha512.10000.<hash>"
#Example DNS, DNS Suffix, NTP settings and timezone, for FTW or similar use cases.
export Maestro_Group_dns1=1.1.1.1
export Maestro_Group_dns2=1.1.1.1
export Maestro_Group_dns3=8.8.8.8
export Maestro_Group_ntp_name='uk.pool.ntp.org'
export Maestro_Group_ntp1=193.150.34.2
export Maestro_Group_ntp2=217.144.90.27
export Maestro_Group_dns_suffix=my.lab
export Maestro_Group_ftw_tzone='Europe / London'
#Mgmt Settings
#We define names for the VS0 policy packages (and network layer name, which is the PP name, with a space, and Network following it, and the same for the non VS0 use cases.)
export Maestro_Group_pp_name="CPX25_SecGrp_VSN_PP"
export Maestro_Group_pp_name_network=$Maestro_Group_pp_name" Network"
export Maestro_Group_pp_name_vs0="CPX25_SecGrp_VSN_PP_vs0"
export Maestro_Group_pp_name_network_vs0=$Maestro_Group_pp_name_vs0" Network"
#In some cases, we need to know what to use, or will be used for Mgmt interfaces. This could be Magg - which is Mgmt Aggregation (e.g. magg1) or a wrp interface, like wrp0 in VSNext mode
export Maestro_Group_mgmt_wrp_name=wrp0
#Vlans ID's, VLAN to create (amount) and VSW ids need to be aligned. You also need to ensure VS ID is not going to clash (overlap) with the VSW IDs
#For example, if you are going to make 10 vswitches, all these 3 following settings need to be aligned.
export Maestro_Group_vlans=(501 502 503 504 505 506 507 508)
export Maestro_Group_vswitchid=(1 2 3 4 5 6 7 8)
export Maestro_Group_vlans_to_create=8

#VS Settings for Maestro
#We know mgmt vswitch ID is 500, but in case R&D change it in the future, it's better to be defined as a variable
export Maestro_Group_mgmt_vsw_id=500
#How many instances (v4/v6) should each created VS have?
export Maestro_Group_vs_core_count=1
export Maestro_Group_vs_core_count_v6=0
#VSs (non VS0) also need a SIC key - defined below.
export Maestro_Group_new_vs_OTP=vpn123
#In this lab, the VS share the same management network as VS0, therefore same DG, however, these networking settings could be different. Hence defined.
export Maestro_Group_vs_def_gw=172.31.100.1
export Maestro_Group_vs_mask_length=22
export Maestro_Group_VS_naming="CPX25_Sec_Group_VSN_vs"
#Here we define the start and end VS ID. Remember this needs to be an integer, and the Virt System ID's should not clash with the Virt Switch ID's (1-8 in this example)
export Maestro_Group_start_vs_id=10
export Maestro_Group_end_vs_id=14
#When setting up the VSys, we define the IP's of the Mgmt interfaces of the VS in this list. This helps VS creation, and ensures that if you specify the mgmt interface of the VS during build, then you can instantly access it (once built)
export Maestro_Group_mgmt_ips=('172.31.101.10' '172.31.101.11' '172.31.101.12' '172.31.101.13' '172.31.101.14')
#Later when setting the VS interfaces (including the 2 data vlan interfaces, which are warp interfaces as they are connected vswitches) we iterate through this list - for clarity we show one system per line - to assign the IP's to the VSystems. 
export Maestro_Group_ips=("172.31.101.10" "10.0.10.5" "11.0.10.5"\
 "172.31.101.11" "12.0.10.5" "13.0.10.5"\
 "172.31.101.12" "14.0.10.5" "15.0.10.5"\
 "172.31.101.13" "16.0.10.5" "17.0.10.5"\
 "172.31.101.14" "10.0.20.5" "11.0.20.5")
 When building policy, when trying to understand confirm the counters needed for rule positions and VS creation counts, these vars may be used.
export Maestro_Group_high_ip=$(expr $Maestro_Group_end_vs_id - $Maestro_Group_start_vs_id)
export Maestro_Group_vs_subnet=$(echo ${Maestro_Group_mgmt_ips[0]} | cut -d '.' -f 1-3)
export Maestro_Group_first_octet=$(echo ${Maestro_Group_mgmt_ips[0]} | cut -d '.' -f 1)
export Maestro_Group_last_octet=$(echo ${Maestro_Group_mgmt_ips[0]} | cut -d '.' -f 4)
#Script Counters and loop setup
export Maestro_Group_vscounter=0
export Maestro_Group_ipcounter=0
export Maestro_Group_rule_number=1
export Maestro_Group_mgmt_ipcounter=0
export Maestro_Group_int_loop_count=0
#Here we can specigy the number of concurrent installation targets. This has been tested with 16200 appliances with 100+VS with 10 concurrent installs. This was a useful setting to let you see progress, rather than trying to install on all VS at the same time.
export Maestro_Group_Max_Concurrent_Install_Targets=2
export Maestro_Group_Target_Index=1
export Maestro_Group_Target_List=()

#ElasticXL System Details
export EXL_Group_SiteID="1"
export EXL_Group_hostname=CPX_EXL_VSN
export EXL_Group_VirtGW=True
export EXL_Group_OTP=vpn123
export EXL_Group_IP=172.31.100.114
export EXL_Group_IP_mask=22
export EXL_Group_DG=172.31.100.1
export EXL_Group_ftw_mgmt_int=Mgmt
export EXL_Group_bondID=10
#Here we used the temporary password vpn123. You can confirm the values of hashes, by first setting the the values, and then checking the config for the hashed version.  Do not use these values in production or anything internet facing.
# Non escaped value export export
# EXL_Group_ExpertHash="\$6\$rounds=10000\$GaLt53lB\$ZJlsasg07KHU0RCdYuemEj4LCyxcT9aPb.<hash>"
#Remember special characters need to be escaped with a \ before they will be accepted
export EXL_Group_ExpertHash="\$6\$rounds=10000\$GaLt53lB\$ZJlsasg07KHU0RCdYuemEj4LCyxcT9aPb.<hash>"
export EXL_Group_GrubHash="grub.pbkdf2.sha512.10000.<hash>"
export EXL_Group_user=admin
export EXL_Group_pass=vpn123
export EXL_Group_Appliance_initial_pass=admin
export EXL_Group_dns1=1.1.1.1
export EXL_Group_dns2=1.1.1.1
export EXL_Group_dns3=8.8.8.8
export EXL_Group_ntp_name='uk.pool.ntp.org'
export EXL_Group_ntp1=217.144.90.27
export EXL_Group_ntp2=193.150.34.2
export EXL_Group_dns_suffix=london.lab
export EXL_Group_ftw_tzone='Europe / London'
export EXL_Group_ftw_reboot_if_needed=true
export EXL_Group_ftw_expert=vpn123
export EXL_Group_sic_key=vpn123
export EXL_Group_daip_gw=false
export EXL_Group_grub_pass=vpn123
#Set cluster false if using EXL/VSN
export EXL_Group_cluster_state=false
export EXL_Group_ftw_exl_on_state=true
export EXL_Group_ftw_vsn_on_state=true
export EXL_Group_bondID=10
export EXL_Group_bond_mode=8023AD
export EXL_Group_bond_xmithash=layer3+4
export EXL_Group_slave_1=eth1-01
export EXL_Group_slave_2=eth1-02
#Vlans ID's, VLAN to create (amount) and VSW ids need to be aligned. You also need to ensure VS ID is not going to clash (overlap) with the VSW IDs
export EXL_Group_vlans=(501 502 503 504 505 506 507 508)
export EXL_Group_vswitchid=(1 2 3 4 5 6 7 8)
export EXL_Group_vlans_to_create=8
#Mgmt Settings
export EXL_Group_pp_name="CPX25_EXL_VSN_PP"
export EXL_Group_pp_name_network=$EXL_Group_pp_name" Network"
export EXL_Group_pp_name_vs0="CPX25_EXL_VSN_vs0"
export EXL_Group_pp_name_network_vs0=$EXL_Group_pp_name_vs0" Network"
export EXL_Group_mgmt_wrp_name=wrp0
#VS Settings for Maestro
export EXL_Group_mgmt_vsw_id=500
export EXL_Group_vs_core_count=1
export EXL_Group_vs_core_count_v6=0
export EXL_Group_new_vs_OTP=vpn123
export EXL_Group_vs_def_gw=172.31.100.1
export EXL_Group_vs_mask_length=22
export EXL_Group_VS_naming="CPX_EXL_VSN_vs"
export EXL_Group_start_vs_id=15
export EXL_Group_end_vs_id=19
#EXL_Group_mgmt_ips must contain only the IP's the VS will have (and match the above start_vs and end_vs amounts)
export EXL_Group_mgmt_ips=('172.31.101.15' '172.31.101.16' '172.31.101.17' '172.31.101.18' '172.31.101.19')
#Whereas EXL_Group_ips contains the IPs for the VS Mgmt, Data 1 and Data 2 interfaces
#If more interfaces are assumed per VS, then the code for creating the VS, and
#IP Addressing the VS in script 03 needs modifying
export EXL_Group_ips=("172.31.101.15" "10.0.30.5" "11.0.30.5"\
 "172.31.101.16" "12.0.30.5" "13.0.30.5"\
 "172.31.101.17" "14.0.30.5" "15.0.30.5"\
 "172.31.101.18" "16.0.30.5" "17.0.30.5"\
 "172.31.101.19" "10.0.40.5" "11.0.40.5")
export EXL_Group_high_ip=$(expr $EXL_Group_end_vs_id - $EXL_Group_start_vs_id)
export EXL_Group_vs_subnet=$(echo ${EXL_Group_mgmt_ips[0]} | cut -d '.' -f 1-3)
export EXL_Group_first_octet=$(echo ${EXL_Group_mgmt_ips[0]} | cut -d '.' -f 1)
export EXL_Group_last_octet=$(echo ${EXL_Group_mgmt_ips[0]} | cut -d '.' -f 4)
#Script Counters and loop setup
export EXL_Group_vscounter=0
export EXL_Group_ipcounter=0
export EXL_Group_rule_number=1
export EXL_Group_mgmt_ipcounter=0
export EXL_Group_int_loop_count=0
export EXL_Group_Max_Concurrent_Install_Targets=10
export EXL_Group_Target_Index=1
export EXL_Group_Target_List=()
#ElasticXL Expansion
export EXL_Group_full_output=""
export EXL_Group_membertoadd=""
#Will the new appliance be added to site 1, or 2?
export EXL_Group_exl_site_id=1

#Source and destination network arrays
export Common_Group_src_nets=("Net10_Inside" "Net12_Inside" "Net14_Inside" "Net16_Inside")
export Common_Group_dst_nets=("Net11_Outside" "Net13_Outside" "Net15_Outside" "Net17_Outside")
export Common_networks=("Net10_Inside:10.0.0.0:255.255.0.0:blue" "Net11_Outside:11.0.0.0:255.255.0.0:cyan" "Net12_Inside:12.0.0.0:255.255.0.0:sea green" "Net13_Outside:13.0.0.0:255.255.0.0:green" "Net14_Inside:14.0.0.0:255.255.0.0:gold" "Net15_Outside:15.0.0.0:255.255.0.0:yellow" "Net16_Inside:16.0.0.0:255.255.0.0:pink" "Net17_Outside:17.0.0.0:255.255.0.0:red")
#Old dummy vars
export gw_user=admin
export api_pass=vpn123
export gw_pass_initial=admin
export mho_user=admin
export mho_pass=vpn123

#FTW Settings
export ftw_Mgmt_hostname=CPX_2025_Mgmt
export ftw_Mgmt_user=admin
export ftw_Mgmt_pass=vpn123
export ftw_Mgmt_type=primary
export ftw_Mgmt_multi_domain=false
export ftw_Mgmt_gui_clients=any
export ftw_Mgmt_expert=vpn123
export ftw_Mgmt_grub=vpn123
export ftw_Mgmt_settle_timer=180
export ftw_Mgmt_dns1=1.1.1.1
export ftw_Mgmt_dns2=1.1.1.1
export ftw_Mgmt_dns3=8.8.8.8
export ftw_Mgmt_ntp1=194.29.38.64
export ftw_Mgmt_ntp2=194.29.36.22
export ftw_reboot_if_needed=true
export ftw_ssh_timeout=3

#Skyline
export Common_Skyline_User=<my_basic_auth_user>
export Common_Skyline_Pass=<my_basic_auth_pass>
export Common_Skyline_Cert='-----BEGIN CERTIFICATE-----<my_cert>-----END CERTIFICATE-----'
export Common_Skyline_URL='https://<server_name>:9090/api/v1/write'
source /etc/profile.d/vsenv.sh